// Generated by CoffeeScript 1.6.3
var Orange;

Orange = (function() {
  function Orange(el) {
    var s, _i, _len, _ref;
    this.el = el;
    this.current = 0;
    this.timer = null;
    this.container = this.el.querySelector('.orange-skin');
    this.slices = this.el.querySelectorAll('.slice');
    this.count = this.slices.length;
    this.container.style.width = (this.count * 100) + "%";
    this.touch_init = 0;
    this.touch_cur = 0;
    this.touch_pending = false;
    this.touch_tranlated = 0;
    _ref = this.slices;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      s = _ref[_i];
      s.style.width = (100 / this.count) + "%";
    }
    this.goTo(this.current);
    this.setTransition(1);
    this.initTouchEvents();
    this.initTouch();
    this.initTransitionEnd();
  }

  Orange.prototype.getSlide = function(id) {
    return this.slices[this.current];
  };

  Orange.prototype.initTransitionEnd = function() {
    var parent;
    parent = this;
    return this.container.addEventListener('webkitTransitionEnd', function(e) {
      return console.log("end transition");
    });
  };

  Orange.prototype.initTouchEvents = function() {
    var parent;
    parent = this;
    this.touchStart = function(e) {
      e.preventDefault();
      parent.touch_pending = true;
      parent.touch_init = e.touches[0].pageX;
      parent.touch_cur = parent.touch_init;
      parent.setTransition(0);
      return parent.touch_translated = parent.current * parent.el.clientWidth * -1;
    };
    this.touchMove = function(e) {
      var d, x;
      e.preventDefault();
      x = e.touches[0].pageX;
      d = parent.touch_cur - x;
      parent.touch_translated += -1 * d;
      parent.setTransform(parent.touch_translated + "px");
      return parent.touch_cur = x;
    };
    return this.touchEnd = function(e) {
      var diff, w;
      e.preventDefault();
      diff = parent.touch_init - parent.touch_cur;
      w = parent.el.clientWidth;
      if ((diff / w * 100) < -10) {
        parent.prev();
      }
      if ((diff / w * 100) > 10) {
        parent.next();
      }
      return parent.goTo(parent.current);
    };
  };

  Orange.prototype.initTouch = function() {
    if (this.el.addEventListener == null) {
      return;
    }
    this.container.addEventListener("touchstart", this.touchStart, true);
    this.container.addEventListener("touchmove", this.touchMove, true);
    return this.container.addEventListener("touchend", this.touchEnd, true);
  };

  Orange.prototype.hasTransform = function() {
    if (this.container.style.transform !== void 0) {
      return "transform";
    }
    if (this.container.style.MozTransform !== void 0) {
      return "MozTransform";
    }
    if (this.container.style.WebkitTransform !== void 0) {
      return "WebkitTransform";
    }
    if (this.container.style.OTransform !== void 0) {
      return "OTransform";
    }
    if (this.container.style.MsTransform !== void 0) {
      return "MsTransform";
    }
    return null;
  };

  Orange.prototype.setTransform = function(pos) {
    this.container.style.transform = "translateX(" + pos + ")";
    this.container.style.MozTransform = "translateX(" + pos + ")";
    this.container.style.WebkitTransform = "translateX(" + pos + ")";
    this.container.style.OTransform = "translateX(" + pos + ")";
    return this.container.style.MsTransform = "translateX(" + pos + ")";
  };

  Orange.prototype.setTransition = function(time) {
    var type;
    if (time === 0) {
      this.container.style.transition = "";
      this.container.style.MozTransition = "";
      this.container.style.WebkitTransition = "";
      this.container.style.OTransition = "";
      this.container.style.MsTransition = "";
      return;
    }
    type = "";
    this.container.style.transition = "transform " + type + " " + time + "s";
    this.container.style.MozTransition = "-moz-transform " + type + " " + time + "s";
    this.container.style.WebkitTransition = "-webkit-transform " + type + " " + time + "s";
    this.container.style.OTransition = "-o-transform " + type + " " + time + "s";
    return this.container.style.MsTransition = "-ms-transform " + type + " " + time + "s";
  };

  Orange.prototype.goTo = function(id) {
    var pos, transformProp;
    if (id < 0 || id >= this.count) {
      return;
    }
    this.current = id;
    transformProp = this.hasTransform();
    if (transformProp === null) {
      pos = id * -100;
      return this.container.style.left = pos + "%";
    } else {
      pos = 100 / this.count * this.current * -1;
      return this.setTransform(pos + "%");
    }
  };

  Orange.prototype.next = function() {
    this.stop();
    if (this.current + 1 >= this.count) {
      return;
    }
    this.current++;
    this.goTo(this.current);
  };

  Orange.prototype.prev = function() {
    this.stop();
    if (this.current - 1 < 0) {
      return;
    }
    this.current--;
    this.goTo(this.current);
  };

  Orange.prototype.prevLoop = function() {
    this.stop();
    this.current--;
    if (this.current < 0) {
      this.current = this.count - 1;
    }
    this.goTo(this.current);
  };

  Orange.prototype.nextLoop = function() {
    this.stop();
    this.current++;
    this.current = this.current % this.count;
    this.goTo(this.current);
  };

  Orange.prototype.start = function(t) {
    var _this = this;
    return this.timer = setInterval(function() {
      _this.current++;
      _this.current = _this.current % _this.count;
      return _this.goTo(_this.current);
    }, t);
  };

  Orange.prototype.stop = function() {
    if (this.timer) {
      return clearInterval(this.timer);
    }
  };

  return Orange;

})();
